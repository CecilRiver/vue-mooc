{"remainingRequest":"C:\\GitTest\\vue-mooc\\node_modules\\babel-loader\\lib\\index.js!C:\\GitTest\\vue-mooc\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\GitTest\\vue-mooc\\src\\base\\message-box\\message-box.js","dependencies":[{"path":"C:\\GitTest\\vue-mooc\\src\\base\\message-box\\message-box.js","mtime":1698894932449},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\babel-loader\\lib\\index.js","mtime":1698895100317},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\eslint-loader\\index.js","mtime":1698895096052}],"contextDependencies":[],"result":["import _typeof from \"C:\\\\GitTest\\\\vue-mooc\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport msgbox from \"./message-box.vue\";\nvar msgQueue = [];\nvar currentMsgBox, instance;\nvar msgboxTypes = ['alert', 'confirm'];\nvar msgboxConstructor = Vue.extend(msgbox);\nvar defaultOptions = {\n  title: '',\n  message: '',\n  type: '',\n  confirmButtonText: '确定',\n  cancelButtonText: '取消',\n  showCancelButton: false,\n  showConfirmButton: true\n};\nvar mergeOption = {\n  alert: {\n    showCancelButton: false,\n    showConfirmButton: true\n  },\n  confirm: {\n    showCancelButton: true,\n    showConfirmButton: true\n  }\n};\n\nvar MessageBox = function MessageBox(options, callback) {\n  if (Vue.prototype.$isServer) {\n    return;\n  }\n\n  if (typeof options === 'string') {\n    options = {\n      message: options\n    };\n\n    if (typeof arguments[1] === 'string') {\n      options.title = arguments[1];\n    }\n  } else if (options.callback && !callback) {\n    callback = options.callback;\n  } // 是否支持Promise\n\n\n  if (typeof Promise !== 'undefined') {\n    return new Promise(function (resolve, reject) {\n      msgQueue.push({\n        options: Object.assign({}, defaultOptions, options),\n        callback: callback,\n        resolve: resolve,\n        reject: reject\n      });\n      showNextMsg();\n    });\n  } else {\n    msgQueue.push({\n      options: Object.assign({}, defaultOptions, options),\n      callback: callback\n    });\n    showNextMsg();\n  }\n};\n\nvar showNextMsg = function showNextMsg() {\n  if (!instance) {\n    initInstance();\n  }\n\n  if (instance.visible || msgQueue.length === 0) {\n    return;\n  }\n\n  currentMsgBox = msgQueue.shift();\n  var options = currentMsgBox.options;\n\n  for (var key in options) {\n    if (options.hasOwnProperty(key)) {\n      instance[key] = options[key];\n    }\n  }\n\n  document.body.appendChild(instance.$el);\n  Vue.nextTick(function () {\n    instance.visible = true;\n  });\n};\n\nvar initInstance = function initInstance() {\n  instance = new msgboxConstructor({\n    el: document.createElement('div')\n  });\n};\n\nmsgboxTypes.forEach(function ($type) {\n  MessageBox[$type] = function (message, title, options) {\n    if (_typeof(title) === 'object') {\n      options = title;\n      title = '';\n    } else if (!title) {\n      title = '';\n    }\n\n    return MessageBox(Object.assign({\n      $type: $type,\n      title: title,\n      message: message\n    }, mergeOption[$type], options));\n  };\n}); // close\n\nMessageBox.close = function () {\n  instance.messageBoxClose();\n  instance = null;\n  msgQueue = [];\n};\n\nexport default MessageBox;\nexport { MessageBox };",{"version":3,"sources":["C:\\GitTest\\vue-mooc\\src\\base\\message-box\\message-box.js"],"names":["Vue","msgbox","msgQueue","currentMsgBox","instance","msgboxTypes","msgboxConstructor","extend","defaultOptions","title","message","type","confirmButtonText","cancelButtonText","showCancelButton","showConfirmButton","mergeOption","alert","confirm","MessageBox","options","callback","prototype","$isServer","arguments","Promise","resolve","reject","push","Object","assign","showNextMsg","initInstance","visible","length","shift","key","hasOwnProperty","document","body","appendChild","$el","nextTick","el","createElement","forEach","$type","close","messageBoxClose"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport msgbox from './message-box.vue'\r\n\r\nlet msgQueue = []\r\nlet currentMsgBox, instance\r\nconst msgboxTypes = ['alert', 'confirm']\r\nconst msgboxConstructor = Vue.extend(msgbox)\r\nconst defaultOptions = {\r\n  title: '',\r\n  message: '',\r\n  type: '',\r\n  confirmButtonText: '确定',\r\n  cancelButtonText: '取消',\r\n  showCancelButton: false,\r\n  showConfirmButton: true\r\n}\r\nconst mergeOption = {\r\n  alert: {\r\n    showCancelButton: false,\r\n    showConfirmButton: true\r\n  },\r\n  confirm: {\r\n    showCancelButton: true,\r\n    showConfirmButton: true\r\n  }\r\n}\r\n\r\nconst MessageBox  = function (options, callback) {\r\n  if (Vue.prototype.$isServer) {\r\n    return\r\n  }\r\n  if (typeof options === 'string') {\r\n    options = {\r\n      message: options\r\n    }\r\n    if (typeof arguments[1] === 'string') {\r\n      options.title = arguments[1]\r\n    }\r\n  } else if (options.callback && !callback) {\r\n    callback = options.callback\r\n  }\r\n\r\n  // 是否支持Promise\r\n  if (typeof Promise !== 'undefined') {\r\n    return new Promise((resolve, reject) => {\r\n      msgQueue.push({\r\n        options: Object.assign({}, defaultOptions, options),\r\n        callback: callback,\r\n        resolve: resolve,\r\n        reject: reject\r\n      })\r\n      showNextMsg()\r\n    })\r\n  } else {\r\n    msgQueue.push({\r\n      options: Object.assign({}, defaultOptions, options),\r\n      callback: callback\r\n    })\r\n    showNextMsg()\r\n  }\r\n}\r\n\r\nconst showNextMsg = function () {\r\n  if (!instance) {\r\n    initInstance()\r\n  }\r\n  if (instance.visible || msgQueue.length === 0) {\r\n    return\r\n  }\r\n  currentMsgBox = msgQueue.shift()\r\n  let options = currentMsgBox.options\r\n  for (const key in options) {\r\n    if (options.hasOwnProperty(key)) {\r\n      instance[key] = options[key]\r\n    }\r\n  }\r\n  document.body.appendChild(instance.$el)\r\n  Vue.nextTick(() => {\r\n    instance.visible = true\r\n  })\r\n}\r\n\r\nconst initInstance = function () {\r\n  instance = new msgboxConstructor({\r\n    el: document.createElement('div')\r\n  })\r\n}\r\n\r\nmsgboxTypes.forEach($type => {\r\n  MessageBox[$type] = (message, title, options) => {\r\n    if (typeof title === 'object') {\r\n      options = title\r\n      title = ''\r\n    } else if (!title) {\r\n      title = ''\r\n    }\r\n    return MessageBox(Object.assign({\r\n      $type: $type,\r\n      title: title,\r\n      message: message\r\n    }, mergeOption[$type], options))\r\n  }\r\n})\r\n\r\n// close\r\nMessageBox.close  = () => {\r\n  instance.messageBoxClose()\r\n  instance = null\r\n  msgQueue = []\r\n}\r\n\r\nexport default MessageBox\r\nexport { MessageBox }"]}]}