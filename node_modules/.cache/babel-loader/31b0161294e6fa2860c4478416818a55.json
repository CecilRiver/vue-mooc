{"remainingRequest":"C:\\GitTest\\vue-mooc\\node_modules\\babel-loader\\lib\\index.js!C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitTest\\vue-mooc\\src\\components\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\GitTest\\vue-mooc\\src\\components\\login\\login.vue","mtime":1699584629192},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\babel-loader\\lib\\index.js","mtime":1698895100317},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js","mtime":1698895084158}],"contextDependencies":[],"result":["import _objectSpread from \"C:\\\\GitTest\\\\vue-mooc\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport crypto from 'crypto-js';\nimport { mapMutations } from 'vuex';\nimport { userLogin, userRegister } from 'api/user.js';\nimport { ERR_OK } from 'api/config.js';\nimport axios from 'utils/axios.js'; // 设置axios的baseURL\n\naxios.defaults.baseURL = 'http://127.0.0.1:10000/';\naxios.defaults.withCredentials = false; // Cookie跨域\n\nexport default {\n  props: {\n    index: Number\n  },\n  data: function data() {\n    var _this = this;\n\n    var checkPassword = function checkPassword(rule, value, callback) {\n      if (!value) {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.loginForm.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n\n    var rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }],\n      ckpassword: [{\n        required: true,\n        message: '请再次输入密码',\n        trigger: 'blur'\n      }, {\n        validator: checkPassword,\n        trigger: 'blur'\n      }]\n    };\n    return {\n      isLoading: false,\n      rules: rules,\n      loginForm: {\n        username: '',\n        password: '',\n        ckpassword: '',\n        auto: true,\n        argement: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    // 自动聚焦\n    var usernameRef = this.$refs.username;\n    var passwordRef = this.$refs.password;\n\n    if (!this.loginForm.username) {\n      usernameRef.focus();\n    } else if (!this.loginForm.password) {\n      passwordRef.focus();\n    } // 监听enter事件\n\n\n    window.addEventListener('keyup', this.handleListenKeyup);\n  },\n  methods: _objectSpread({\n    // 表单校验\n    handleValidateForm: function handleValidateForm() {\n      var _this2 = this;\n\n      if (this.isLoading || this.index === 1 && !this.loginForm.argement) {\n        return false;\n      }\n\n      this.$refs['loginForm'].validate(function (valid) {\n        if (valid) {\n          _this2.handleBtnClick();\n        }\n      });\n    },\n    // 按钮点击\n    handleBtnClick: function handleBtnClick() {\n      var _this3 = this;\n\n      var params = {\n        username: this.loginForm.username,\n        //MD5加密，未启用\n        //password: crypto.MD5(this.loginForm.password).toString()\n        password: this.loginForm.password // 判断是登陆还是注册\n\n      };\n      var func = this.index === 0 ? userLogin : userRegister;\n      var tips = this.index === 0 ? '登录' : '注册';\n      this.isLoading = true;\n      func(params).then(function (res) {\n        _this3.isLoading = false;\n        var msg = res.msg,\n            code = res.code,\n            page = res.page;\n\n        if (code !== ERR_OK) {\n          _this3.loginForm.password = '';\n          _this3.loginForm.ckpassword = '';\n          _this3.loginForm.argement = false;\n\n          _this3.$message.error(msg);\n\n          return false;\n        }\n\n        _this3.$message.success(\"\".concat(tips, \"\\u6210\\u529F\"));\n\n        _this3.loginForm = {}; // 缓存用户数据\n\n        _this3.setUserInfo(page.list); // console.log(\"lll\")\n        // console.log(userInfo)\n        // 关闭弹窗\n\n\n        _this3.setShowLogin(false);\n      }).catch(function () {\n        _this3.isLoading = false;\n\n        _this3.$message.error('服务器异常');\n      });\n    },\n    // 监听页面enter事件\n    handleListenKeyup: function handleListenKeyup(e) {\n      if (e.keyCode === 13) {\n        this.handleValidateForm();\n      }\n    }\n  }, mapMutations('login', {\n    'setUserInfo': 'SET_USER_INFO',\n    'setShowLogin': 'SET_SHOW_LOGIN'\n  })),\n  watch: {\n    index: function index() {\n      this.$refs.loginForm.resetFields();\n    }\n  },\n  computed: {\n    btnText: function btnText() {\n      var text = '';\n\n      if (this.index === 0) {\n        text = this.isLoading ? '登录中...' : '登录';\n      } else {\n        text = this.isLoading ? '注册中...' : '注册';\n      }\n\n      return text;\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('keyup', this.handleListenKeyup);\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"login-way\">\r\n    <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"rules\">\r\n      <el-form-item prop=\"username\">\r\n        <el-input ref=\"username\" v-model.trim=\"loginForm.username\" placeholder=\"请输入用户名\" clearable />\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input ref=\"passowrd\" v-model.trim=\"loginForm.password\" placeholder=\"请输入密码\" show-password />\r\n      </el-form-item>\r\n      <el-form-item v-if=\"index === 1\" prop=\"ckpassword\">\r\n        <el-input v-model.trim=\"loginForm.ckpassword\" placeholder=\"请再次输入密码\" show-password />\r\n      </el-form-item>\r\n      <el-form-item class=\"auto-login-item\">\r\n        <template v-if=\"index == 0\">\r\n          <el-checkbox v-model=\"loginForm.auto\">\r\n            七天内自动登录\r\n          </el-checkbox>\r\n          <div class=\"auto-login-btn-box\">\r\n            <span>找回密码</span>\r\n            <span>无法登陆</span>\r\n          </div>\r\n        </template>\r\n        <template v-else>\r\n          <el-checkbox v-model=\"loginForm.argement\">\r\n            同意\r\n          </el-checkbox>\r\n          <span class=\"agreement\">《用户注册协议》</span>\r\n        </template>\r\n      </el-form-item>\r\n    </el-form>\r\n    <button\r\n      class=\"login-btn\"\r\n      :class=\"{'is-loading': isLoading || (index == 1 && !loginForm.argement)}\"\r\n      @click=\"handleValidateForm\"\r\n    >\r\n      {{ btnText }}\r\n    </button>\r\n  </div>\r\n</template>\r\n<script>\r\nimport crypto from 'crypto-js'\r\nimport { mapMutations } from 'vuex'\r\nimport { userLogin, userRegister } from 'api/user.js'\r\nimport { ERR_OK } from 'api/config.js'\r\nimport axios from 'utils/axios.js'\r\n\r\n// 设置axios的baseURL\r\naxios.defaults.baseURL = 'http://127.0.0.1:10000/';\r\naxios.defaults.withCredentials = false;// Cookie跨域\r\nexport default {\r\n  props: {\r\n    index: Number\r\n  },\r\n  data () {\r\n    const checkPassword = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.loginForm.password) {\r\n        callback(new Error('两次输入的密码不一致'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const rules = {\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' }\r\n      ],\r\n      ckpassword: [\r\n        { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n        { validator: checkPassword, trigger: 'blur' }\r\n      ]\r\n    }\r\n    return {\r\n      isLoading: false,\r\n      rules: rules,\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n        ckpassword: '',\r\n        auto: true,\r\n        argement: false\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    // 自动聚焦\r\n    const usernameRef = this.$refs.username\r\n    const passwordRef = this.$refs.password\r\n    if (!this.loginForm.username) {\r\n      usernameRef.focus()\r\n    } else if (!this.loginForm.password) {\r\n      passwordRef.focus()\r\n    }\r\n    // 监听enter事件\r\n    window.addEventListener('keyup', this.handleListenKeyup)\r\n  },\r\n  methods: {\r\n    // 表单校验\r\n    handleValidateForm () {\r\n      if (this.isLoading || (this.index === 1 && !this.loginForm.argement)) {\r\n        return false\r\n      }\r\n      this.$refs['loginForm'].validate((valid) => {\r\n        if (valid) {\r\n          this.handleBtnClick()\r\n        }\r\n      })\r\n    },\r\n    // 按钮点击\r\n    handleBtnClick () {\r\n      const params = {\r\n        username: this.loginForm.username,\r\n        //MD5加密，未启用\r\n        //password: crypto.MD5(this.loginForm.password).toString()\r\n        password: this.loginForm.password\r\n      }\r\n      // 判断是登陆还是注册\r\n      const func = this.index === 0 ? userLogin : userRegister\r\n      const tips = this.index === 0 ? '登录' : '注册'\r\n      this.isLoading = true\r\n      func(params).then(res => {\r\n        this.isLoading = false\r\n        let { msg, code, page } = res\r\n        if (code !== ERR_OK) {\r\n          this.loginForm.password = ''\r\n          this.loginForm.ckpassword = ''\r\n          this.loginForm.argement = false\r\n          this.$message.error(msg)\r\n          return false\r\n        }\r\n        this.$message.success(`${tips}成功`)\r\n        this.loginForm = {}\r\n        // 缓存用户数据\r\n        this.setUserInfo(page.list)\r\n        // console.log(\"lll\")\r\n        // console.log(userInfo)\r\n      \r\n        // 关闭弹窗\r\n        this.setShowLogin(false)\r\n      }).catch(() => {\r\n        this.isLoading = false\r\n        this.$message.error('服务器异常')\r\n      })\r\n    },\r\n    // 监听页面enter事件\r\n    handleListenKeyup (e) {\r\n      if (e.keyCode === 13) {\r\n        this.handleValidateForm()\r\n      }\r\n    },\r\n    // vuex\r\n    ...mapMutations('login', {\r\n      'setUserInfo': 'SET_USER_INFO',\r\n      'setShowLogin': 'SET_SHOW_LOGIN'\r\n    })\r\n  },\r\n  watch: {\r\n    index () {\r\n      this.$refs.loginForm.resetFields()\r\n    }\r\n  },\r\n  computed: {\r\n    btnText () {\r\n      let text = ''\r\n      if (this.index === 0) {\r\n        text = this.isLoading ? '登录中...' : '登录'\r\n      } else {\r\n        text = this.isLoading ? '注册中...' : '注册'\r\n      }\r\n      return text\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    window.removeEventListener('keyup', this.handleListenKeyup)\r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" scoped>\r\n  @import '~assets/stylus/login-form.styl';\r\n</style>\r\n"],"sourceRoot":"src/components/login"}]}