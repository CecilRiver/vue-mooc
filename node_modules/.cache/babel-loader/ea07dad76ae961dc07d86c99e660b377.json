{"remainingRequest":"C:\\GitTest\\vue-mooc\\node_modules\\babel-loader\\lib\\index.js!C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitTest\\vue-mooc\\src\\pages\\order\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\GitTest\\vue-mooc\\src\\pages\\order\\edit.vue","mtime":1700096320735},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\babel-loader\\lib\\index.js","mtime":1698895100317},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js","mtime":1698895084158}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport Editor from 'wangeditor'; // import 'wangeditor/release/wangEditor.min.css';\n\nexport default {\n  name: 'Editor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n\n    /**\r\n     * 绑定的值的类型, enum: ['html']\r\n     */\n    valueType: {\n      type: String,\n      default: 'html'\n    },\n\n    /**\r\n     * @description 设置change事件触发时间间隔\r\n     */\n    changeInterval: {\n      type: Number,\n      default: 200\n    },\n\n    /**\r\n     * @description 是否开启本地存储\r\n     */\n    cache: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  computed: {\n    editorId: function editorId() {\n      return \"editor\".concat(this._uid);\n    }\n  },\n  watch: {\n    value: function value(newValue, oldValue) {\n      // console.log(newValue);\n      // 解决页面第一次加载后获取的数据无法渲染到富文本的问题\n      this._setHtmlOnce(newValue);\n    }\n  },\n  methods: {\n    setHtml: function setHtml(val) {\n      this.editor.txt.html(val);\n    },\n    setEditorHeight: function setEditorHeight() {\n      var el = document.querySelector('.w-e-text-container');\n      el.style.minHeight = '300px';\n      el.style.height = '';\n    },\n    _setHtmlOnce: function _setHtmlOnce(val) {\n      if (!this.__setHtmlCount) {\n        this.editor.txt.html(val);\n        this.__setHtmlCount = 1;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.editor = new Editor(\"#\".concat(this.editorId));\n\n    this.editor.customConfig.onchange = function (html) {\n      var text = _this.editor.txt.text(); // if (this.cache) localStorage.editorCache = html;\n\n\n      _this.$emit('input', _this.valueType === 'html' ? html : text);\n\n      _this.$emit('on-change', html, text);\n    };\n\n    this.editor.customConfig.onchangeTimeout = this.changeInterval;\n    this.editor.customConfig.showLinkImg = false; // this.editor.customConfig.uploadImgShowBase64 = true;\n    // create这个方法一定要在所有配置项之后调用\n\n    this.editor.create(); // this.setEditorHeight();\n    // 如果本地有存储加载本地存储内容\n    // let html = this.value || localStorage.editorCache;\n\n    var html = this.value;\n    if (html) this.editor.txt.html(html);\n  }\n};",{"version":3,"sources":["edit.vue"],"names":[],"mappings":";;;;;;;;AAOA,OAAA,MAAA,MAAA,YAAA,C,CACA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;;AAKA;;;AAGA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KARA;;AAaA;;;AAGA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhBA;;AAoBA;;;AAGA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAvBA,GAFA;AA+BA,EAAA,IA/BA,kBA+BA;AACA,WAAA,EAAA;AACA,GAjCA;AAmCA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,6BAAA,KAAA,IAAA;AACA;AAHA,GAnCA;AAyCA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,QADA,EACA,QADA,EACA;AACA;AACA;AACA,WAAA,YAAA,CAAA,QAAA;AACA;AALA,GAzCA;AAiDA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA;AACA,WAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA;AACA,KAHA;AAKA,IAAA,eALA,6BAKA;AACA,UAAA,EAAA,GAAA,QAAA,CAAA,aAAA,CAAA,qBAAA,CAAA;AAEA,MAAA,EAAA,CAAA,KAAA,CAAA,SAAA,GAAA,OAAA;AACA,MAAA,EAAA,CAAA,KAAA,CAAA,MAAA,GAAA,EAAA;AACA,KAVA;AAYA,IAAA,YAZA,wBAYA,GAZA,EAYA;AACA,UAAA,CAAA,KAAA,cAAA,EAAA;AACA,aAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA;AACA,aAAA,cAAA,GAAA,CAAA;AACA;AACA;AAjBA,GAjDA;AAqEA,EAAA,OArEA,qBAqEA;AAAA;;AACA,SAAA,MAAA,GAAA,IAAA,MAAA,YAAA,KAAA,QAAA,EAAA;;AACA,SAAA,MAAA,CAAA,YAAA,CAAA,QAAA,GAAA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,EAAA,CADA,CAEA;;;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,KAAA,MAAA,GAAA,IAAA,GAAA,IAAA;;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,WAAA,EAAA,IAAA,EAAA,IAAA;AACA,KALA;;AAMA,SAAA,MAAA,CAAA,YAAA,CAAA,eAAA,GAAA,KAAA,cAAA;AACA,SAAA,MAAA,CAAA,YAAA,CAAA,WAAA,GAAA,KAAA,CATA,CAUA;AACA;;AAEA,SAAA,MAAA,CAAA,MAAA,GAbA,CAcA;AACA;AACA;;AAEA,QAAA,IAAA,GAAA,KAAA,KAAA;AACA,QAAA,IAAA,EAAA,KAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;AAzFA,CAAA","sourcesContent":["<template>\r\n    <div class=\"editor-wrapper\">\r\n        <div :id=\"editorId\" class=\"editor-div\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Editor from 'wangeditor';\r\n// import 'wangeditor/release/wangEditor.min.css';\r\n\r\nexport default {\r\n    name: 'Editor',\r\n    props: {\r\n        value: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        /**\r\n         * 绑定的值的类型, enum: ['html']\r\n         */\r\n        valueType: {\r\n            type: String,\r\n            default: 'html'\r\n        },\r\n\r\n        /**\r\n         * @description 设置change事件触发时间间隔\r\n         */\r\n        changeInterval: {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n        /**\r\n         * @description 是否开启本地存储\r\n         */\r\n        cache: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {};\r\n    },\r\n\r\n    computed: {\r\n        editorId() {\r\n            return `editor${this._uid}`;\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        value(newValue, oldValue) {\r\n            // console.log(newValue);\r\n            // 解决页面第一次加载后获取的数据无法渲染到富文本的问题\r\n            this._setHtmlOnce(newValue);\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setHtml(val) {\r\n            this.editor.txt.html(val);\r\n        },\r\n\r\n        setEditorHeight() {\r\n            let el = document.querySelector('.w-e-text-container');\r\n\r\n            el.style.minHeight = '300px';\r\n            el.style.height = '';\r\n        },\r\n\r\n        _setHtmlOnce(val) {\r\n            if (!this.__setHtmlCount) {\r\n                this.editor.txt.html(val);\r\n                this.__setHtmlCount = 1;\r\n            }\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.editor = new Editor(`#${this.editorId}`);\r\n        this.editor.customConfig.onchange = html => {\r\n            let text = this.editor.txt.text();\r\n            // if (this.cache) localStorage.editorCache = html;\r\n            this.$emit('input', this.valueType === 'html' ? html : text);\r\n            this.$emit('on-change', html, text);\r\n        };\r\n        this.editor.customConfig.onchangeTimeout = this.changeInterval;\r\n        this.editor.customConfig.showLinkImg = false;\r\n        // this.editor.customConfig.uploadImgShowBase64 = true;\r\n        // create这个方法一定要在所有配置项之后调用\r\n\r\n        this.editor.create();\r\n        // this.setEditorHeight();\r\n        // 如果本地有存储加载本地存储内容\r\n        // let html = this.value || localStorage.editorCache;\r\n\r\n        let html = this.value;\r\n        if (html) this.editor.txt.html(html);\r\n    }\r\n};\r\n</script>\r\n\r\n\r\n"],"sourceRoot":"src/pages/order"}]}