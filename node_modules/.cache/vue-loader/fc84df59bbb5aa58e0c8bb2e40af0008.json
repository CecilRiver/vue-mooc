{"remainingRequest":"C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitTest\\vue-mooc\\src\\pages\\read\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\GitTest\\vue-mooc\\src\\pages\\read\\index.vue","mtime":1698894932466},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\babel-loader\\lib\\index.js","mtime":1698895100317},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js","mtime":1698895084158}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Pagination from 'components/pagination/pagination.vue'\r\nimport Empty from 'components/empty/empty.vue'\r\nimport { getReadTypes, getReadList } from 'api/read.js'\r\nimport { ERR_OK } from 'api/config.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      readList: [],\r\n      currentIndex: 0,\r\n      total: 0,\r\n      page: 1,\r\n      typeList: []\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getReadTypes()\r\n    this.getReadListData()\r\n  },\r\n  methods: {\r\n    // 专栏类型点击\r\n    handleTypeClick (type, index) {\r\n      this.page = 1\r\n      this.currentIndex = index\r\n      this.getReadListData()\r\n    },\r\n    // 专栏点击\r\n    handleReadClick (read) {\r\n      this.$router.push(`/read/${read.id}`)\r\n    },\r\n    // 分页值更新\r\n    handlePaginationChange (page) {\r\n      this.page = page\r\n      this.getReadListData()\r\n    },\r\n    // 获取专栏类型数据\r\n    getReadTypes () {\r\n      getReadTypes().then(res => {\r\n        const { code, data, msg } = res\r\n        if (code === ERR_OK) {\r\n          data.unshift({\r\n            value: '全部'\r\n          })\r\n          this.typeList = data\r\n        } else {\r\n          this.typeList = []\r\n          this.$message.error(msg)\r\n        }\r\n      }).catch(() => {\r\n        this.typeList = []\r\n      })\r\n    },\r\n    // 获取专栏列表数据\r\n    getReadListData () {\r\n      const params = {\r\n        page: this.page,\r\n        type: this.currentType\r\n      }\r\n      getReadList(params).then(res => {\r\n        let { code, data, msg } = res\r\n        if (code === ERR_OK) {\r\n          this.readList = data.list\r\n          this.total = data.total\r\n        } else {\r\n          this.readList = []\r\n          this.total = 0\r\n          this.$message.error(msg)\r\n        }\r\n      }).catch(() => {\r\n        this.readList = []\r\n        this.total = 0\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    currentType () {\r\n      if (this.typeList.length === 0) {\r\n        return ''\r\n      }\r\n      const type = this.typeList[this.currentIndex].value\r\n      return type === '全部' ? '' : type\r\n    }\r\n  },\r\n  components: {\r\n    Pagination,\r\n    Empty\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/pages/read","sourcesContent":["<template>\r\n  <div class=\"read m-center\">\r\n    <!-- 头部 -->\r\n    <div class=\"read-header\">\r\n      <img src=\"https://www.imooc.com/static/img/column/sub-logo2.png\" alt=\"\">\r\n      <p class=\"total-course\">\r\n        共{{ total }}个专栏\r\n      </p>\r\n    </div>\r\n\r\n    <!-- 导航 -->\r\n    <div class=\"read-nav\">\r\n      <dl>\r\n        <dt>分类：</dt>\r\n        <dd\r\n          v-for=\"(type,index) in typeList\"\r\n          :key=\"index\"\r\n          :class=\"{\r\n            active: index == currentIndex\r\n          }\"\r\n          @click=\"handleTypeClick(type, index)\"\r\n        >\r\n          {{ type.value }}\r\n        </dd>\r\n      </dl>\r\n    </div>\r\n\r\n    <!-- 列表 -->\r\n    <div v-if=\"readList.length\" class=\"read-list\">\r\n      <ul>\r\n        <li\r\n          v-for=\"(item, index) in readList\"\r\n          :key=\"index\"\r\n          class=\"read-item\"\r\n          @click=\"handleReadClick(item)\"\r\n        >\r\n          <div class=\"img-box\">\r\n            <img :src=\"item.img\" alt=\"\">\r\n          </div>\r\n          <div class=\"read-content\">\r\n            <p class=\"title\">\r\n              {{ item.title }}\r\n            </p>\r\n            <p class=\"read-desc\">\r\n              {{ item.desc }}\r\n            </p>\r\n            <p class=\"author\">\r\n              <img :src=\"item.author.avatar\" class=\"avatar\" alt=\"\">\r\n              <span class=\"name\">{{ item.author.name }}</span>\r\n              <span class=\"split\">/</span>\r\n              <span class=\"job\">{{ item.author.job }}</span>\r\n            </p>\r\n            <dl class=\"try-read\">\r\n              <dd v-for=\"(read, index) in item.tryRead\" :key=\"index\" class=\"try-item\">\r\n                <span class=\"icon\">试读</span>\r\n                <span class=\"name\">{{ read }}</span>\r\n              </dd>\r\n            </dl>\r\n            <p class=\"other\">\r\n              <span class=\"price\">¥ {{ item.price }}</span>\r\n              <span class=\"trem\">共{{ item.term }}小节</span>\r\n              <span class=\"number\">共{{ item.persons }}人购买</span>\r\n            </p>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <empty v-else message=\"暂无相关专栏数据\"></empty>\r\n\r\n    <!-- 分页 -->\r\n    <pagination :total=\"total\" :page.sync=\"page\" @change=\"handlePaginationChange\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport Pagination from 'components/pagination/pagination.vue'\r\nimport Empty from 'components/empty/empty.vue'\r\nimport { getReadTypes, getReadList } from 'api/read.js'\r\nimport { ERR_OK } from 'api/config.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      readList: [],\r\n      currentIndex: 0,\r\n      total: 0,\r\n      page: 1,\r\n      typeList: []\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getReadTypes()\r\n    this.getReadListData()\r\n  },\r\n  methods: {\r\n    // 专栏类型点击\r\n    handleTypeClick (type, index) {\r\n      this.page = 1\r\n      this.currentIndex = index\r\n      this.getReadListData()\r\n    },\r\n    // 专栏点击\r\n    handleReadClick (read) {\r\n      this.$router.push(`/read/${read.id}`)\r\n    },\r\n    // 分页值更新\r\n    handlePaginationChange (page) {\r\n      this.page = page\r\n      this.getReadListData()\r\n    },\r\n    // 获取专栏类型数据\r\n    getReadTypes () {\r\n      getReadTypes().then(res => {\r\n        const { code, data, msg } = res\r\n        if (code === ERR_OK) {\r\n          data.unshift({\r\n            value: '全部'\r\n          })\r\n          this.typeList = data\r\n        } else {\r\n          this.typeList = []\r\n          this.$message.error(msg)\r\n        }\r\n      }).catch(() => {\r\n        this.typeList = []\r\n      })\r\n    },\r\n    // 获取专栏列表数据\r\n    getReadListData () {\r\n      const params = {\r\n        page: this.page,\r\n        type: this.currentType\r\n      }\r\n      getReadList(params).then(res => {\r\n        let { code, data, msg } = res\r\n        if (code === ERR_OK) {\r\n          this.readList = data.list\r\n          this.total = data.total\r\n        } else {\r\n          this.readList = []\r\n          this.total = 0\r\n          this.$message.error(msg)\r\n        }\r\n      }).catch(() => {\r\n        this.readList = []\r\n        this.total = 0\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    currentType () {\r\n      if (this.typeList.length === 0) {\r\n        return ''\r\n      }\r\n      const type = this.typeList[this.currentIndex].value\r\n      return type === '全部' ? '' : type\r\n    }\r\n  },\r\n  components: {\r\n    Pagination,\r\n    Empty\r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" scoped>\r\n  @import '~assets/stylus/variables.styl';\r\n  @import '~assets/stylus/mixin.styl';\r\n  .read\r\n    .read-header\r\n      margin-top: 20px;\r\n      padding-right: 296px;\r\n      border-bottom: 1px solid rgba(7,17,27,0.1);\r\n      img\r\n        display: inline-block;\r\n        height: 60px;\r\n      .total-course\r\n        float: right;\r\n        line-height: 60px;\r\n        font-size: 14px;\r\n        color: $font-four-color;\r\n    .read-nav\r\n      dl\r\n        padding-top: 16px;\r\n        padding-bottom: 16px;\r\n        border-bottom: 1px solid rgba(7,17,27,0.1);\r\n        font-size: 14px;\r\n        dt, dd\r\n          display: inline-block;\r\n          vertical-align: middle;\r\n          line-height: 30px;\r\n        dt\r\n          margin-right: 10px;\r\n          font-weight: 700;\r\n        dd\r\n          margin-right: 5px;\r\n          padding: 0 10px;\r\n          cursor: pointer;\r\n          &.active\r\n            color: $theme-red-color;\r\n            background-color: rgba(242,13,13,0.06);\r\n            border-radius: 6px;\r\n            font-weight: 700;\r\n    .read-list\r\n      .read-item\r\n        display: flex;\r\n        align-items: flex-start;\r\n        margin: 50px 0;\r\n        padding-bottom: 15px;\r\n        border-bottom: 1px solid rgba(7,17,27,0.1);\r\n        cursor: pointer;\r\n        &:last-child\r\n          border-bottom: none;\r\n        &:hover\r\n          .img-box\r\n            & > img\r\n              transform: scale(1.2);\r\n          .read-content\r\n            .title\r\n              color: #6698ff;\r\n        .img-box\r\n          margin-right: 30px;\r\n          img-box(138px, 157px)\r\n          & > img\r\n            transform: scale(1);\r\n            transition: transform 0.2s ease-in-out;\r\n            background-color: transparent;\r\n            cursor: pointer;\r\n        .read-content\r\n          flex: 1;\r\n          .title\r\n            font-size: 20px;\r\n            font-weight: 700;\r\n            color: $font-first-color;\r\n            line-height: 36px;\r\n          .read-desc\r\n            font-size: 14px;\r\n            color: $font-second-color;\r\n            line-height: 24px;\r\n            font-weight: 700;\r\n          .author\r\n            margin: 8px 0;\r\n            font-size: 12px;\r\n            img, span\r\n              display: inline-block;\r\n              vertical-align: middle;\r\n            .avatar\r\n              margin-right: 10px;\r\n              width: 36px;\r\n              height: 36px;\r\n              border-radius: 50%;\r\n            .split\r\n              padding: 0 10px;\r\n          .try-read\r\n            padding: 10px 0;\r\n            .try-item\r\n              display: inline-block;\r\n              vertical-align: middle;\r\n              margin-bottom: 12px;\r\n              width: 33.33%;\r\n              font-size: 12px;\r\n              color: $font-second-color;\r\n              line-height: 24px;\r\n              cursor: pointer;\r\n              &:hover\r\n                color: $theme-blue-color; \r\n              .icon\r\n                margin-right: 10px;\r\n                padding: 4px;\r\n                background-color: rgba(102,152,255, 0.1);\r\n                color: $theme-blue-color;\r\n                font-weight: 700;\r\n          .other\r\n            font-size: 12px;\r\n            line-height: 24px;\r\n            color: $font-four-color;\r\n            & > span\r\n              display: inline-block;\r\n              vertical-align: middle;\r\n              padding: 0 5px;\r\n              &.price\r\n                margin-right: 10px;\r\n                font-size: 16px;\r\n                color: $theme-blue-color;\r\n                font-weight: 700;\r\n</style>"]}]}