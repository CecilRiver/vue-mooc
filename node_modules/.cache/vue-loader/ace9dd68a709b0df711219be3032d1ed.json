{"remainingRequest":"C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitTest\\vue-mooc\\src\\pages\\notice\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\GitTest\\vue-mooc\\src\\pages\\notice\\index.vue","mtime":1698894932464},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\babel-loader\\lib\\index.js","mtime":1698895100317},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js","mtime":1698895084158}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Pagination from 'components/pagination/pagination.vue'\r\nimport Empty from 'components/empty/empty.vue'\r\nimport { ERR_OK } from 'api/config.js'\r\nimport { getNoticeList, getNoticeSetting, noticeReadOne, noticeReadAll, noticeNoticeDelete } from 'api/notice.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      total: 0,             // 总数\r\n      page: 1,              // 当前页\r\n      dialogVisible: false, // 是否显示消息中心弹窗\r\n      settingList: [],      // 设置数据\r\n      noticeList: [],       // 消息中心列表 \r\n      currentNavIndex: 0,   // 当前导航的索引\r\n      navList: []           // 导航数据\r\n    }\r\n  },\r\n  created () {\r\n    this.navList = [\r\n      { title: '全部', code: 0 },\r\n      { title: '实战', code: 1 },\r\n      { title: '系统', code: 2 }\r\n    ]\r\n  },\r\n  mounted () {\r\n    this.getNoticeListData()\r\n  },\r\n  methods: {\r\n    // 选项卡切换\r\n    handleNavClick (nav, index) {\r\n      this.page = 1\r\n      this.currentNavIndex = index\r\n      this.getNoticeListData()\r\n    },\r\n    // 单个通知删除\r\n    handleDeleteClick (item) {\r\n      const data = {\r\n        id: item.id\r\n      }\r\n      noticeNoticeDelete(data).then(res => {\r\n        const { code, msg } = res\r\n        if (code !== ERR_OK) {\r\n          this.$message.error(msg)\r\n          return false\r\n        }\r\n        this.$message.success('删除成功')\r\n        this.getNoticeListData()\r\n      }).catch(() => {\r\n        this.$message.error('删除失败')\r\n      })\r\n    },\r\n    // 单个通知已读\r\n    handleNoticeClick (item) {\r\n      const data = {\r\n        id: item.id\r\n      }\r\n      noticeReadOne(data).then(res => {\r\n        const { code, msg } = res\r\n        if (code !== ERR_OK) {\r\n          this.$message.error(msg)\r\n          return false\r\n        }\r\n        this.$message.success('消息已读成功')\r\n        this.getNoticeListData()\r\n      }).catch(() => {\r\n        this.$message.error('消息已读失败')\r\n      })\r\n    },\r\n    // 全部标记已读\r\n    handleAllReadClick () {\r\n      const postIds = this.noticeList.filter(notice => !notice.isRead).map(notice => notice.id)\r\n      const data = {\r\n        ids: postIds\r\n      }\r\n      noticeReadAll(data).then(res => {\r\n        const { code, msg } = res\r\n        if (code !== ERR_OK) {\r\n          this.$message.error(msg)\r\n          return false\r\n        }\r\n        this.$message.success('全部标记成功')\r\n        this.getNoticeListData()\r\n      }).catch(() => {\r\n        this.$message.error('全部标记失败')\r\n      })\r\n    },\r\n    // 通知设置点击\r\n    handleSettingClick () {\r\n      this.dialogVisible = true\r\n      this.getNoticeSettingData()\r\n    },\r\n    // 分页值更新\r\n    handlePaginationChange (page) {\r\n      this.page = page\r\n      this.getNoticeListData()\r\n    },\r\n    // 获取通知列表数据\r\n    getNoticeListData () {\r\n      const params = {\r\n        page: this.page,\r\n        code: this.currentCode\r\n      }\r\n      getNoticeList(params).then(res => {\r\n        this.noticeList = []\r\n        this.total = 0\r\n        let { code, data, msg } = res\r\n        if (code === ERR_OK) {\r\n          this.noticeList = data.list\r\n          this.total = data.total\r\n        } else {\r\n          this.$message.error(msg)\r\n          this.noticeList = []\r\n          this.total = 0\r\n        }\r\n      }).catch(() => {\r\n        this.noticeList = []\r\n        this.total = 0\r\n      })\r\n    },\r\n    // 获取通知设置数据\r\n    getNoticeSettingData () {\r\n      getNoticeSetting().then(res => {\r\n        this.settingList = []\r\n        let { code, data } = res\r\n        if (code === ERR_OK) {\r\n          this.settingList = data\r\n        }\r\n      }).catch(() => {\r\n        this.settingList = []\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    currentCode () {\r\n      return this.navList[this.currentNavIndex].code || ''\r\n    }\r\n  },\r\n  components: {\r\n    Pagination,\r\n    Empty,\r\n    NoticeSetting: () => import('./notice-setting.vue')\r\n  },\r\n  beforeDestroy () {\r\n    clearTimeout(this.timer)\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"index.vue","sourceRoot":"src/pages/notice","sourcesContent":["<template>\r\n  <div class=\"notice m-center\">\r\n    <!-- nav -->\r\n    <ul class=\"notice-nav\">\r\n      <li\r\n        v-for=\"(nav,index) in navList\"\r\n        :key=\"nav.code\"\r\n        class=\"nav-item\"\r\n        :class=\"{active: currentNavIndex == index}\"\r\n        @click=\"handleNavClick(nav, index)\"\r\n      >\r\n        {{ nav.title }}\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- list -->\r\n    <div class=\"notice-list\">\r\n      <div class=\"list-setting\">\r\n        <span class=\"tips\">消息中心只展示最近三个月的消息</span>\r\n        <span class=\"setting-box\">\r\n          <span v-if=\"noticeList.length > 0\" class=\"read-all\" @click=\"handleAllReadClick\">全部标记为已读</span>\r\n          <span class=\"read-setting\" @click=\"handleSettingClick\">通知设置</span>\r\n        </span>\r\n      </div>\r\n      <ul v-if=\"noticeList.length\">\r\n        <li\r\n          v-for=\"(item,index) in noticeList\"\r\n          :key=\"index\"\r\n          ref=\"NoticeList\"\r\n          class=\"list-item\"\r\n          :class=\"{ready: item.isRead}\"\r\n        >\r\n          <div class=\"item-icon\">\r\n            {{ item.code == 1 ? '实战' : '系统' }}\r\n          </div>\r\n          <div class=\"item-content\">\r\n            <p class=\"title\" @click=\"handleNoticeClick(item)\">\r\n              {{ item.title }}\r\n            </p>\r\n            <p class=\"time\">\r\n              {{ item.time }}\r\n            </p>\r\n            <span class=\"iconfont delete\" @click.stop=\"handleDeleteClick(item)\">&#xe622;</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <empty v-else message=\"暂无相关消息数据\"></empty>\r\n    </div>\r\n\r\n    <!-- pagination -->\r\n    <pagination v-if=\"noticeList.length\" :total=\"total\" :page.sync=\"page\" @change=\"handlePaginationChange\" />\r\n\r\n    <!-- dialog -->\r\n    <notice-setting :list=\"settingList\" :visible.sync=\"dialogVisible\"></notice-setting>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Pagination from 'components/pagination/pagination.vue'\r\nimport Empty from 'components/empty/empty.vue'\r\nimport { ERR_OK } from 'api/config.js'\r\nimport { getNoticeList, getNoticeSetting, noticeReadOne, noticeReadAll, noticeNoticeDelete } from 'api/notice.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      total: 0,             // 总数\r\n      page: 1,              // 当前页\r\n      dialogVisible: false, // 是否显示消息中心弹窗\r\n      settingList: [],      // 设置数据\r\n      noticeList: [],       // 消息中心列表 \r\n      currentNavIndex: 0,   // 当前导航的索引\r\n      navList: []           // 导航数据\r\n    }\r\n  },\r\n  created () {\r\n    this.navList = [\r\n      { title: '全部', code: 0 },\r\n      { title: '实战', code: 1 },\r\n      { title: '系统', code: 2 }\r\n    ]\r\n  },\r\n  mounted () {\r\n    this.getNoticeListData()\r\n  },\r\n  methods: {\r\n    // 选项卡切换\r\n    handleNavClick (nav, index) {\r\n      this.page = 1\r\n      this.currentNavIndex = index\r\n      this.getNoticeListData()\r\n    },\r\n    // 单个通知删除\r\n    handleDeleteClick (item) {\r\n      const data = {\r\n        id: item.id\r\n      }\r\n      noticeNoticeDelete(data).then(res => {\r\n        const { code, msg } = res\r\n        if (code !== ERR_OK) {\r\n          this.$message.error(msg)\r\n          return false\r\n        }\r\n        this.$message.success('删除成功')\r\n        this.getNoticeListData()\r\n      }).catch(() => {\r\n        this.$message.error('删除失败')\r\n      })\r\n    },\r\n    // 单个通知已读\r\n    handleNoticeClick (item) {\r\n      const data = {\r\n        id: item.id\r\n      }\r\n      noticeReadOne(data).then(res => {\r\n        const { code, msg } = res\r\n        if (code !== ERR_OK) {\r\n          this.$message.error(msg)\r\n          return false\r\n        }\r\n        this.$message.success('消息已读成功')\r\n        this.getNoticeListData()\r\n      }).catch(() => {\r\n        this.$message.error('消息已读失败')\r\n      })\r\n    },\r\n    // 全部标记已读\r\n    handleAllReadClick () {\r\n      const postIds = this.noticeList.filter(notice => !notice.isRead).map(notice => notice.id)\r\n      const data = {\r\n        ids: postIds\r\n      }\r\n      noticeReadAll(data).then(res => {\r\n        const { code, msg } = res\r\n        if (code !== ERR_OK) {\r\n          this.$message.error(msg)\r\n          return false\r\n        }\r\n        this.$message.success('全部标记成功')\r\n        this.getNoticeListData()\r\n      }).catch(() => {\r\n        this.$message.error('全部标记失败')\r\n      })\r\n    },\r\n    // 通知设置点击\r\n    handleSettingClick () {\r\n      this.dialogVisible = true\r\n      this.getNoticeSettingData()\r\n    },\r\n    // 分页值更新\r\n    handlePaginationChange (page) {\r\n      this.page = page\r\n      this.getNoticeListData()\r\n    },\r\n    // 获取通知列表数据\r\n    getNoticeListData () {\r\n      const params = {\r\n        page: this.page,\r\n        code: this.currentCode\r\n      }\r\n      getNoticeList(params).then(res => {\r\n        this.noticeList = []\r\n        this.total = 0\r\n        let { code, data, msg } = res\r\n        if (code === ERR_OK) {\r\n          this.noticeList = data.list\r\n          this.total = data.total\r\n        } else {\r\n          this.$message.error(msg)\r\n          this.noticeList = []\r\n          this.total = 0\r\n        }\r\n      }).catch(() => {\r\n        this.noticeList = []\r\n        this.total = 0\r\n      })\r\n    },\r\n    // 获取通知设置数据\r\n    getNoticeSettingData () {\r\n      getNoticeSetting().then(res => {\r\n        this.settingList = []\r\n        let { code, data } = res\r\n        if (code === ERR_OK) {\r\n          this.settingList = data\r\n        }\r\n      }).catch(() => {\r\n        this.settingList = []\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    currentCode () {\r\n      return this.navList[this.currentNavIndex].code || ''\r\n    }\r\n  },\r\n  components: {\r\n    Pagination,\r\n    Empty,\r\n    NoticeSetting: () => import('./notice-setting.vue')\r\n  },\r\n  beforeDestroy () {\r\n    clearTimeout(this.timer)\r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" scoped>\r\n  @import '~assets/stylus/variables.styl';\r\n  @import '~assets/stylus/mixin.styl';\r\n  .notice\r\n    margin-top: 30px;\r\n    .notice-nav\r\n      padding-left: 32px;\r\n      .nav-item\r\n        display: inline-block;\r\n        margin-right: 58px;\r\n        height: 60px;\r\n        line-height: 60px;\r\n        cursor: pointer;\r\n        &.active\r\n          color: $theme-red-color;\r\n          border-bottom: 2px solid $theme-red-color;\r\n    .notice-list\r\n      .list-setting\r\n        padding-left: 28px;\r\n        padding-right: 20px;\r\n        height: 50px;\r\n        line-height: 50px;\r\n        border-top: 1px solid $border-first-color;\r\n        background-color: #f3f5f7;\r\n        color: $font-four-color;\r\n        font-size: 14px;\r\n        .setting-box\r\n          float: right;\r\n          & > span\r\n            margin-left: 20px;\r\n            color: $font-second-color;\r\n            cursor: pointer;\r\n            &:hover\r\n              color: $font-first-color;\r\n      .list-item\r\n        padding: 20px 10px;\r\n        display: flex;\r\n        align-items: flex-start;\r\n        height: 90px;\r\n        border-bottom: 1px solid $border-second-color;\r\n        box-sizing: border-box;\r\n        transition: all 0.3s linear;\r\n        opacity: 1;\r\n        &.ready\r\n          .item-icon\r\n            border: 1px solid $border-second-color;\r\n            background-color: #fff;\r\n            color: $font-four-color;\r\n          .item-content\r\n            .title\r\n              color: $font-four-color;\r\n        .item-icon\r\n          margin-right: 20px;\r\n          padding: 10px;\r\n          border: 1px solid $theme-red-color;\r\n          background-color: #fde7e5;\r\n          color: $theme-red-color;\r\n          font-size: 14px;\r\n        .item-content\r\n          flex: 1;\r\n          position: relative;\r\n          &:hover\r\n            .delete\r\n              display: block;\r\n          & > p\r\n            line-height: 24px;\r\n            &.title\r\n              font-size: 16px;\r\n              font-weight: 700;\r\n              color: $font-second-color;\r\n              cursor: pointer;\r\n              ellipsis();\r\n            &.time\r\n              font-size: 14px;\r\n              color: $font-four-color;\r\n          .delete\r\n            display: none;\r\n            position: absolute;\r\n            top: 0px;\r\n            right: 20px;\r\n            color: $font-four-color;\r\n            cursor: pointer;\r\n</style>"]}]}