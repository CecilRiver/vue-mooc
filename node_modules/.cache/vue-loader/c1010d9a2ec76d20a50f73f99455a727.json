{"remainingRequest":"C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitTest\\vue-mooc\\src\\pages\\notice\\index.vue?vue&type=template&id=39c58bdf&scoped=true&","dependencies":[{"path":"C:\\GitTest\\vue-mooc\\src\\pages\\notice\\index.vue","mtime":1698894932464},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1698895084166},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698895099045},{"path":"C:\\GitTest\\vue-mooc\\node_modules\\vue-loader\\lib\\index.js","mtime":1698895084158}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"notice m-center\" },\n    [\n      _c(\n        \"ul\",\n        { staticClass: \"notice-nav\" },\n        _vm._l(_vm.navList, function(nav, index) {\n          return _c(\n            \"li\",\n            {\n              key: nav.code,\n              staticClass: \"nav-item\",\n              class: { active: _vm.currentNavIndex == index },\n              on: {\n                click: function($event) {\n                  return _vm.handleNavClick(nav, index)\n                }\n              }\n            },\n            [_vm._v(\"\\n      \" + _vm._s(nav.title) + \"\\n    \")]\n          )\n        }),\n        0\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"notice-list\" },\n        [\n          _c(\"div\", { staticClass: \"list-setting\" }, [\n            _c(\"span\", { staticClass: \"tips\" }, [\n              _vm._v(\"消息中心只展示最近三个月的消息\")\n            ]),\n            _c(\"span\", { staticClass: \"setting-box\" }, [\n              _vm.noticeList.length > 0\n                ? _c(\n                    \"span\",\n                    {\n                      staticClass: \"read-all\",\n                      on: { click: _vm.handleAllReadClick }\n                    },\n                    [_vm._v(\"全部标记为已读\")]\n                  )\n                : _vm._e(),\n              _c(\n                \"span\",\n                {\n                  staticClass: \"read-setting\",\n                  on: { click: _vm.handleSettingClick }\n                },\n                [_vm._v(\"通知设置\")]\n              )\n            ])\n          ]),\n          _vm.noticeList.length\n            ? _c(\n                \"ul\",\n                _vm._l(_vm.noticeList, function(item, index) {\n                  return _c(\n                    \"li\",\n                    {\n                      key: index,\n                      ref: \"NoticeList\",\n                      refInFor: true,\n                      staticClass: \"list-item\",\n                      class: { ready: item.isRead }\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"item-icon\" }, [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(item.code == 1 ? \"实战\" : \"系统\") +\n                            \"\\n        \"\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"item-content\" }, [\n                        _c(\n                          \"p\",\n                          {\n                            staticClass: \"title\",\n                            on: {\n                              click: function($event) {\n                                return _vm.handleNoticeClick(item)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(item.title) +\n                                \"\\n          \"\n                            )\n                          ]\n                        ),\n                        _c(\"p\", { staticClass: \"time\" }, [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(item.time) +\n                              \"\\n          \"\n                          )\n                        ]),\n                        _c(\n                          \"span\",\n                          {\n                            staticClass: \"iconfont delete\",\n                            on: {\n                              click: function($event) {\n                                $event.stopPropagation()\n                                return _vm.handleDeleteClick(item)\n                              }\n                            }\n                          },\n                          [_vm._v(\"\")]\n                        )\n                      ])\n                    ]\n                  )\n                }),\n                0\n              )\n            : _c(\"empty\", { attrs: { message: \"暂无相关消息数据\" } })\n        ],\n        1\n      ),\n      _vm.noticeList.length\n        ? _c(\"pagination\", {\n            attrs: { total: _vm.total, page: _vm.page },\n            on: {\n              \"update:page\": function($event) {\n                _vm.page = $event\n              },\n              change: _vm.handlePaginationChange\n            }\n          })\n        : _vm._e(),\n      _c(\"notice-setting\", {\n        attrs: { list: _vm.settingList, visible: _vm.dialogVisible },\n        on: {\n          \"update:visible\": function($event) {\n            _vm.dialogVisible = $event\n          }\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}